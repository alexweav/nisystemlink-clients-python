# tox (https://tox.readthedocs.io/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
envlist = py35,py36,py37,py38,lint
requires=
    setuptools>=40.1.0

[testenv]
deps =
    lint: black
    lint: docutils
    lint: flake8
    lint: flake8-docstrings
    lint: flake8-import-order
    mypy
    pytest
    pytest-asyncio
    setuptools>=40.1.0
commands =
    lint: black --target-version py35 --exclude ".*\.pyi" --check systemlink examples tests
    lint: flake8 systemlink examples tests
    lint: mypy --config-file mypy.ini systemlink examples/tag tests
    lint: pytest --doctest-modules docs
    pytest tests --strict {posargs:-m "(not slow) and (not cloud)"}

[gh-actions]
python =
   3.5: py35
   3.6: py36
   3.7: py37
   3.8: py38,lint

# Note that pytest args can be passed on the commandline after "--", e.g.
#    tox -- -m integration
# to run all integration tests. (The list of available markers is below.)
#
# The default pytest args used above say to *not* run tests marked as slow or
# cloud. If you specifically want to run *all* tests, then you must pass *some*
# argument after "--". An easy way to do this is just repeat the --strict flag:
#    tox -- --strict

[pytest]
markers =
    unit: mark a test as a unit test
    integration: mark a test as an integration test
    cloud: mark a test as a cloud integration test
    webserver: mark a test as a webserver integration test
    slow: mark a test as a slow test

[testenv:docs]
description = invoke sphinx-build to build the HTML docs
basepython = python3
deps =
    -rdocs/requirements.txt
commands =
    sphinx-build -a -E -c docs -d "{toxworkdir}/docs_doctree" docs "{toxworkdir}/docs_out" --color -W -bhtml {posargs}
    python -c 'import pathlib; print("documentation available under file://\{0\}".format(pathlib.Path(r"{toxworkdir}") / "docs_out" / "index.html"))'
